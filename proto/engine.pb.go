// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/engine.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpgradeRequest struct {
	Version              []int32  `protobuf:"varint,1,rep,packed,name=Version,proto3" json:"Version,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
	Md5                  string   `protobuf:"bytes,3,opt,name=Md5,proto3" json:"Md5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeRequest) Reset()         { *m = UpgradeRequest{} }
func (m *UpgradeRequest) String() string { return proto.CompactTextString(m) }
func (*UpgradeRequest) ProtoMessage()    {}
func (*UpgradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{0}
}

func (m *UpgradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeRequest.Unmarshal(m, b)
}
func (m *UpgradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeRequest.Marshal(b, m, deterministic)
}
func (m *UpgradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeRequest.Merge(m, src)
}
func (m *UpgradeRequest) XXX_Size() int {
	return xxx_messageInfo_UpgradeRequest.Size(m)
}
func (m *UpgradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeRequest proto.InternalMessageInfo

func (m *UpgradeRequest) GetVersion() []int32 {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *UpgradeRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *UpgradeRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

type CommandRequest struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfae4ba294cbbcbf, []int{1}
}

func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (m *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(m, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

func (m *CommandRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func init() {
	proto.RegisterType((*UpgradeRequest)(nil), "proto.UpgradeRequest")
	proto.RegisterType((*CommandRequest)(nil), "proto.CommandRequest")
}

func init() { proto.RegisterFile("proto/engine.proto", fileDescriptor_dfae4ba294cbbcbf) }

var fileDescriptor_dfae4ba294cbbcbf = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xcd, 0x4b, 0xcf, 0xcc, 0x4b, 0xd5, 0x03, 0x73, 0x84, 0x58, 0xc1, 0x94, 0x94,
	0x20, 0x44, 0x2a, 0x29, 0xb1, 0x38, 0x33, 0x19, 0x22, 0xa3, 0xe4, 0xc7, 0xc5, 0x17, 0x5a, 0x90,
	0x5e, 0x94, 0x98, 0x92, 0x1a, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0x24, 0xc1, 0xc5, 0x1e,
	0x96, 0x5a, 0x54, 0x9c, 0x99, 0x9f, 0x27, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x1a, 0x04, 0xe3, 0x0a,
	0x09, 0x70, 0x31, 0x87, 0x16, 0xe5, 0x48, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x20,
	0x11, 0xdf, 0x14, 0x53, 0x09, 0x66, 0x88, 0x88, 0x6f, 0x8a, 0xa9, 0x92, 0x16, 0x17, 0x9f, 0x73,
	0x7e, 0x6e, 0x6e, 0x62, 0x5e, 0x0a, 0x92, 0x79, 0xc9, 0x10, 0x11, 0x09, 0x46, 0xb0, 0x3a, 0x18,
	0xd7, 0xa8, 0x86, 0x8b, 0xcd, 0x15, 0xec, 0x4a, 0x21, 0x0b, 0x2e, 0x76, 0xa8, 0x2e, 0x21, 0x51,
	0x88, 0xc3, 0xf4, 0x50, 0x4d, 0x91, 0x12, 0x81, 0x0a, 0x3b, 0x81, 0xdc, 0x1e, 0x94, 0x5a, 0x5c,
	0x90, 0x9f, 0x57, 0x9c, 0xaa, 0xc4, 0x00, 0xd2, 0x09, 0x75, 0x3f, 0x5c, 0x27, 0xaa, 0x7f, 0x70,
	0xe9, 0x4c, 0x62, 0x03, 0x0b, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xd8, 0xc2, 0x7b,
	0x30, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EngineClient is the client API for Engine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EngineClient interface {
	// stop restart
	Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*BasicResponse, error)
	Upgrade(ctx context.Context, in *UpgradeRequest, opts ...grpc.CallOption) (*BasicResponse, error)
}

type engineClient struct {
	cc *grpc.ClientConn
}

func NewEngineClient(cc *grpc.ClientConn) EngineClient {
	return &engineClient{cc}
}

func (c *engineClient) Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*BasicResponse, error) {
	out := new(BasicResponse)
	err := c.cc.Invoke(ctx, "/proto.Engine/Command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *engineClient) Upgrade(ctx context.Context, in *UpgradeRequest, opts ...grpc.CallOption) (*BasicResponse, error) {
	out := new(BasicResponse)
	err := c.cc.Invoke(ctx, "/proto.Engine/Upgrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EngineServer is the server API for Engine service.
type EngineServer interface {
	// stop restart
	Command(context.Context, *CommandRequest) (*BasicResponse, error)
	Upgrade(context.Context, *UpgradeRequest) (*BasicResponse, error)
}

func RegisterEngineServer(s *grpc.Server, srv EngineServer) {
	s.RegisterService(&_Engine_serviceDesc, srv)
}

func _Engine_Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EngineServer).Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Engine/Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EngineServer).Command(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Engine_Upgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EngineServer).Upgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Engine/Upgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EngineServer).Upgrade(ctx, req.(*UpgradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Engine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Engine",
	HandlerType: (*EngineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Command",
			Handler:    _Engine_Command_Handler,
		},
		{
			MethodName: "Upgrade",
			Handler:    _Engine_Upgrade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/engine.proto",
}
